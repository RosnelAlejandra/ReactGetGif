{"version":3,"sources":["components/AddCategory.js","helpers/GetGif.js","components/GifGridItem.js","components/GifGrid.js","hoooks/useFetchGifs.js","GifExperApp.js","index.js"],"names":["AddCategory","setCategorias","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","categorias","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAKRC,mBAAS,IALD,mBAKrCC,EALqC,KAKzBC,EALyB,KAuB5C,OACI,sBAAMC,SAbU,SAACC,GAEjBA,EAAEC,iBACEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAc,SAAAS,GAAI,OAAKP,GAAL,mBAAqBO,OACvCN,EAAc,MAQlB,SACI,uBACIO,KAAK,OACLC,MAAST,EACTU,SArBa,SAACP,GACtBF,EAAeE,EAAEQ,OAAOF,a,+BCRnBG,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DAETC,EAFS,iDAEyCC,UAAWH,GAFpD,8DAIII,MAAOF,GAJX,cAITG,EAJS,gBAKQA,EAAKC,OALb,uBAKPC,EALO,EAKPA,KAEFC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAX3B,kBAeRM,GAfQ,4CAAH,sDCDPO,EAAc,SAAC,GAAsB,EAApBJ,GAAqB,IAAjBC,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IAErC,OACI,sBAAKc,UAAU,yCAAf,UACI,qBAAKC,IAAMf,EAAMgB,IAAMN,IACvB,kCAAMA,EAAN,WCHCO,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAAe,ECDb,SAACA,GAAc,IAAD,EAEZd,mBACvB,CAACqB,KAAK,GACLa,SAAS,IAJyB,mBAE/BC,EAF+B,KAExBC,EAFwB,KAqBtC,OAbHC,qBAAW,WAERxB,EAASC,GACJwB,MAAM,SAAAC,GAEHH,EAAS,CACLf,KAAMkB,EACNL,SAAS,SAItB,CAACpB,IAEOqB,EDlBmBK,CAAa1B,GAA/BO,EAF6B,EAE7BA,KAAMa,EAFuB,EAEvBA,QAEd,OACI,qCACA,qBAAIJ,UAAU,oCAAd,cAAqDhB,EAArD,OAECoB,GAAW,mBAAGJ,UAAU,mCAAb,qBAER,qBAAKA,UAAU,YAAf,SAEMT,EAAKE,KAAK,SAAAC,GAAG,OACP,cAAC,EAAD,eAESA,GADCA,EAAIC,aEbzBgB,EAAe,WAAO,IAAD,EAEMzC,mBAAU,CAAC,YAFjB,mBAEvB0C,EAFuB,KAEX3C,EAFW,KAI9B,OACI,qCACI,8CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBACA,6BAEQ2C,EAAWnB,KAAI,SAAAT,GAAQ,OACnB,cAAC,EAAD,CACIA,SAAWA,GADAA,Y,MCVvC6B,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.a571f7e7.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport const AddCategory = ({setCategorias}) => {\r\n\r\n    //Cambia el valor de un input de al teclear sobre el\r\n    //al dar Enter intedra el nombre en el listado.\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleInputChage = (e) =>{\r\n        setInputValue( e.target.value );\r\n    }\r\n\r\n    const hanleSubmit = (e) => {\r\n        //para prevenir el comportamiento de refrescar el navegador\r\n        e.preventDefault();\r\n        if( inputValue.trim().length > 2){\r\n            setCategorias(cats => [inputValue , ...cats ]);\r\n            setInputValue('');\r\n        }\r\n\r\n      //  console.log(inputValue);\r\n        \r\n    }\r\n\r\n    return (\r\n        <form onSubmit={hanleSubmit}>\r\n            <input \r\n                type=\"text\" \r\n                value= { inputValue }\r\n                onChange={ handleInputChage }\r\n                />\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategorias: PropTypes.func.isRequired\r\n}","\r\n\r\n\r\nexport const getGifs = async(category) => {\r\n   // console.log(category);\r\n        const url =  `https://api.giphy.com/v1/gifs/search?q=${ encodeURI( category ) \r\n    }&limit=2&api_key=N37tbhKAAh8vyRtRKIVf4kUlTgGF9bGQ`;\r\n        const resp = await fetch( url );\r\n        const { data } = await resp.json();\r\n    \r\n        const gifs = data.map( img => {\r\n            return {\r\n                id: img.id,\r\n                title: img.title,\r\n                url: img.images?.downsized_medium.url\r\n            }\r\n        })\r\n    //regresa una promesa\r\n        return gifs;\r\n    }","import React from 'react'\r\n\r\nexport const GifGridItem = ({ id, title, url}) => {\r\n  //  console.log( id, img, url);\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn\">\r\n            <img src={ url } alt={ title } />\r\n            <p> { title } </p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hoooks/useFetchGifs'\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({ category }) => {\r\n\r\n    const { data, loading } = useFetchGifs(category);\r\n\r\n    return (\r\n        <>\r\n        <h3 className=\"animate__animated animate__fadeIn\"> { category } </h3>\r\n\r\n       { loading && <p className=\"animate__animated animate__flash\">Loading</p> }\r\n\r\n            <div className=\"card-grid\">\r\n                \r\n                { data.map( img => (\r\n                        <GifGridItem \r\n                            key={ img.id }\r\n                            { ...img }\r\n                        />\r\n                    )) \r\n                   \r\n                }\r\n\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\n\r\n","import { useState, useEffect } from 'react'\r\nimport { getGifs } from '../helpers/GetGif';\r\n\r\nexport const useFetchGifs = (category) => {\r\n    \r\n    const [state, setState] = useState(\r\n       {data:[],\r\n        loading: true} \r\n    );\r\n\r\n //Se ejecuta al cambiar categoria   \r\n useEffect( () => {\r\n\r\n    getGifs( category )\r\n        .then( imgs => {\r\n            \r\n            setState({\r\n                data: imgs,\r\n                loading: false\r\n            });\r\n        })\r\n\r\n}, [category])\r\n\r\n    return state; //data inicial\r\n    \r\n}\r\n","import React, { useState } from 'react';\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n    const [categorias, setCategorias] = useState( ['Samurai'] );\r\n\r\n    return (\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setCategorias={setCategorias} />\r\n            <hr />\r\n            <ol>\r\n                {\r\n                    categorias.map(category => (\r\n                        <GifGrid key={ category } \r\n                            category={ category } />\r\n                    ))\r\n                }\r\n            </ol>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { GifExpertApp } from './GifExperApp';\n\nimport './index.css';\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}